# .github/workflows/deploy.yml

name: Deploy Cloudflare Workers and KV Data

on:
  push:
    branches:
      - main # Trigger on pushes to the 'main' branch
    paths:
      - 'worker.js'        # Trigger if worker code changes
      - 'wrangler.toml'    # Trigger if wrangler config changes
      - 'brands_data.json' # Trigger if brand data changes

jobs:
  deploy:
    runs-on: ubuntu-latest # Use a standard Ubuntu runner

    # Define environment variables for the entire job
    # The CLOUDFLARE_API_TOKEN is shared across all deployments in the matrix
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }} 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Get your code from the GitHub repository

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Install Node.js
        with:
          node-version: '20' # Recommend Node.js 20 or newer

      - name: Install Wrangler CLI
        run: npm install -g wrangler # Install Cloudflare's CLI tool

      - name: Install jq (for JSON parsing)
        run: sudo apt-get update && sudo apt-get install -y jq # Install jq for processing JSON

      # This strategy matrix will create a separate job run for each account.
      # Each iteration will have a different value for matrix.account.
      - name: Deploy to Cloudflare Accounts
        env: # These environment variables are specific to this step and matrix iteration
          CLOUDFLARE_ACCOUNT_ID_AU210: ${{ secrets.CLOUDFLARE_ACCOUNT_ID_AU210 }}
          KV_NAMESPACE_ID_AU210: ${{ secrets.KV_NAMESPACE_ID_AU210 }}
          # ... add more account secrets if you have more than AU213 ...

        # The matrix defines the different values for 'account' in each run
        strategy:
          matrix:
            account: ["AU210"] # Add or remove your specific account prefixes here

        run: |
          # Dynamically get the Account ID and KV Namespace ID for the current matrix.account
          CURRENT_ACCOUNT_ID=$(eval echo \$CLOUDFLARE_ACCOUNT_ID_${{ matrix.account }})
          CURRENT_KV_NAMESPACE_ID=$(eval echo \$KV_NAMESPACE_ID_${{ matrix.account }})

          # Set the specific AU_PREFIX for this deployment
          export AU_PREFIX=${{ matrix.account }} 

          echo "--- Deploying to Cloudflare account: ${{ matrix.account }} ---"
          echo "  Account ID: $CURRENT_ACCOUNT_ID"
          echo "  KV Namespace ID: $CURRENT_KV_NAMESPACE_ID"
          echo "  AU Prefix for Worker: $AU_PREFIX"

          # --- Step A: Update KV Data for the current account ---
          # Read brands_data.json and upload each entry to KV
          jq -c '.[]' brands_data.json | while read -r line; do
            ID=$(echo "$line" | jq -r '.id')
            VALUE=$(echo "$line" | jq -c '{baseUrl: .baseUrl, fullQueryStringTemplate: .fullQueryStringTemplate}')

            echo "    Uploading KV key: $ID"
            # Use --remote to ensure it connects to Cloudflare's servers
            wrangler kv key put "$ID" "$VALUE" --namespace-id "$CURRENT_KV_NAMESPACE_ID" --remote
          done
          echo "    KV data update complete for ${{ matrix.account }}."

          # --- Step B: Deploy Worker Code for the current account ---
          # Deploy the Worker. The AU_PREFIX will be picked up from the current environment.
          # We use --name to give each Worker a unique name on Cloudflare (e.g., AU210-brand-redirect)
          # --override-to-default-namespace is often used for Pages or specific Worker routes; 
          # --env production or other named envs from wrangler.toml can be used.
          # Since worker.js is in the root, no working-directory is needed here.
          wrangler deploy --minify \
            --name "${{ matrix.account }}-brand-redirect" \
            --compatibility-date "2024-06-23" \
            --account-id "$CURRENT_ACCOUNT_ID" # Explicitly provide account ID
          echo "--- Worker deployed for ${{ matrix.account }} ---"
          echo "---------------------------------------------------"