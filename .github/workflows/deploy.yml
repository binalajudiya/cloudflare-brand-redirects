# .github/workflows/deploy.yml

name: Deploy Cloudflare Workers and KV Data

on:
  push:
    branches:
      - main # Trigger on pushes to the 'main' branch
    paths:
      - 'worker.js'        # Trigger if worker code changes
      - 'wrangler.toml'    # Trigger if wrangler config changes
      - 'brands_data.json' # Trigger if brand data changes

jobs:
  deploy:
    runs-on: ubuntu-latest # Use a standard Ubuntu runner
    
    # The 'strategy' block MUST be here, directly under the 'job' (deploy)
    strategy:
      matrix:
        account: ["AU210"] # Add or remove your specific account prefixes here
    
    # These environment variables are set for EACH matrix run.
    # We use the 'format' function to dynamically select the correct secret based on matrix.account.
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }} 
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets[format('CLOUDFLARE_ACCOUNT_ID_{0}', matrix.account)] }}
      KV_NAMESPACE_ID: ${{ secrets[format('KV_NAMESPACE_ID_{0}', matrix.account)] }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Get your code from the GitHub repository

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Install Node.js
        with:
          node-version: '20' # Recommend Node.js 20 or newer

      - name: Install Wrangler CLI
        run: npm install -g wrangler # Install Cloudflare's CLI tool

      - name: Install jq (for JSON parsing)
        run: sudo apt-get update && sudo apt-get install -y jq # Install jq for processing JSON

      - name: Perform Deployment for ${{ matrix.account }}
        # The 'run' script for each matrix iteration
        run: |
          # The CLOUDFLARE_ACCOUNT_ID and KV_NAMESPACE_ID are now directly available
          # from the 'env' section above, thanks to the matrix iteration.
          
          # Set the specific AU_PREFIX for this deployment
          export AU_PREFIX=${{ matrix.account }} 

          echo "--- Deploying to Cloudflare account: ${{ matrix.account }} ---"
          echo "  Account ID: $CLOUDFLARE_ACCOUNT_ID" # Now directly accessible
          echo "  KV Namespace ID: $KV_NAMESPACE_ID"   # Now directly accessible
          echo "  AU Prefix for Worker: $AU_PREFIX"

          # --- Step A: Update KV Data for the current account ---
          echo "    Clearing existing KV data in namespace: $KV_NAMESPACE_ID..."
          # List and delete all KV keys in the given namespace
          wrangler kv key list --namespace-id "$KV_NAMESPACE_ID" --preview=false | jq -r '.[].name' | while read -r key; do
            echo "      Deleting KV key: $key"
            wrangler kv key delete "$key" --namespace-id "$KV_NAMESPACE_ID"
          done
          echo "    KV data cleared."

          jq -c '.[]' brands_data.json | while read -r line; do
            ID=$(echo "$line" | jq -r '.id')
            VALUE=$(echo "$line" | jq -c '{baseUrl: .baseUrl, fullQueryStringTemplate: .fullQueryStringTemplate}')
            
            echo "    Uploading KV key: $ID"
            wrangler kv key put "$ID" "$VALUE" --namespace-id "$KV_NAMESPACE_ID" --remote
          done
          echo "    KV data update complete for ${{ matrix.account }}."

          # --- Step B: Deploy Worker Code for the current account ---
          # Generate lowercase name in shell
          NAME="$(echo '${{ matrix.account }}' | tr '[:upper:]' '[:lower:]')-brand-redirect"

          wrangler deploy --minify \
            --name "$NAME" \
            --compatibility-date "2024-06-23"
          
          # These echo statements MUST be on separate lines and not continue the previous command
          echo "--- Worker deployed for ${{ matrix.account }} ---"
          echo "---------------------------------------------------"